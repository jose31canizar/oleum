'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _templateObject = _taggedTemplateLiteral(['\n    // Module generated from Markdown by Markdown Component Loader v', '\n    ', '\n    MarkdownComponent.propTypes = {\n      className: PropTypes.string,\n      style: PropTypes.object'], ['\n    // Module generated from Markdown by Markdown Component Loader v', '\n    ', '\n    MarkdownComponent.propTypes = {\n      className: PropTypes.string,\n      style: PropTypes.object']),
    _templateObject2 = _taggedTemplateLiteral([',\n        elementProps: PropTypes.object\n      };\n\n      MarkdownComponent.defaultProps = {\n        elementProps: {}'], [',\n        elementProps: PropTypes.object\n      };\n\n      MarkdownComponent.defaultProps = {\n        elementProps: {}']),
    _templateObject3 = _taggedTemplateLiteral(['\n    \n    };\n    ', '\n    function MarkdownComponent(props) {\n      const { className, style', ' } = props;\n\n      return (\n        <div className={className} style={style}>\n          ', '\n        </div>\n      );\n    };\n\n    export default MarkdownComponent;\n    '], ['\n    \n    };\n    ', '\n    function MarkdownComponent(props) {\n      const { className, style', ' } = props;\n\n      return (\n        <div className={className} style={style}>\n          ', '\n        </div>\n      );\n    };\n\n    export default MarkdownComponent;\n    ']);

var _docChomp = require('doc-chomp');

var _docChomp2 = _interopRequireDefault(_docChomp);

var _import = require('./import');

var _import2 = _interopRequireDefault(_import);

var _static = require('./static');

var _static2 = _interopRequireDefault(_static);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var formatCollection = function formatCollection(formatter) {
  var collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Object.keys(collection).map(function (name) {
    return formatter(name, collection[name]);
  }).join('');
};

exports.default = function (imports, statics, jsxContent, _ref) {
  var passElementProps = _ref.passElementProps;

  var moduleText = (0, _docChomp2.default)(_templateObject, '1.1.0', formatCollection(_import2.default, imports));

  if (passElementProps) {
    moduleText += (0, _docChomp2.default)(2)(_templateObject2);
  }

  moduleText += (0, _docChomp2.default)(0)(_templateObject3, formatCollection(_static2.default, statics), passElementProps ? ', elementProps' : '', jsxContent);

  return moduleText;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mb3JtYXR0ZXJzL21vZHVsZS5qcyJdLCJuYW1lcyI6WyJmb3JtYXRDb2xsZWN0aW9uIiwiZm9ybWF0dGVyIiwiY29sbGVjdGlvbiIsIk9iamVjdCIsImtleXMiLCJtYXAiLCJuYW1lIiwiam9pbiIsImltcG9ydHMiLCJzdGF0aWNzIiwianN4Q29udGVudCIsInBhc3NFbGVtZW50UHJvcHMiLCJtb2R1bGVUZXh0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLG1CQUFtQixTQUFuQkEsZ0JBQW1CLENBQUNDLFNBQUQ7QUFBQSxNQUFZQyxVQUFaLHVFQUF5QixFQUF6QjtBQUFBLFNBQ3ZCQyxPQUFPQyxJQUFQLENBQVlGLFVBQVosRUFBd0JHLEdBQXhCLENBQ0UsVUFBQ0MsSUFBRDtBQUFBLFdBQVVMLFVBQVVLLElBQVYsRUFBZ0JKLFdBQVdJLElBQVgsQ0FBaEIsQ0FBVjtBQUFBLEdBREYsRUFFRUMsSUFGRixDQUVPLEVBRlAsQ0FEdUI7QUFBQSxDQUF6Qjs7a0JBTWUsVUFBQ0MsT0FBRCxFQUFVQyxPQUFWLEVBQW1CQyxVQUFuQixRQUF3RDtBQUFBLE1BQXZCQyxnQkFBdUIsUUFBdkJBLGdCQUF1Qjs7QUFDckUsTUFBSUMsK0RBRUFaLG1DQUErQlEsT0FBL0IsQ0FGQSxDQUFKOztBQU9BLE1BQUlHLGdCQUFKLEVBQXNCO0FBQ3BCQyxrQkFBYyx3QkFBUyxDQUFULENBQWQ7QUFNRDs7QUFFREEsZ0JBQWMsd0JBQVMsQ0FBVCxDQUFkLG1CQUdJWixtQ0FBK0JTLE9BQS9CLENBSEosRUFLOEJFLG1CQUFtQixnQkFBbkIsR0FBc0MsRUFMcEUsRUFTVUQsVUFUVjs7QUFpQkEsU0FBT0UsVUFBUDtBQUNELEMiLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERvY0Nob21wIGZyb20gJ2RvYy1jaG9tcCc7XG5pbXBvcnQgZm9ybWF0SW1wb3J0IGZyb20gJy4vaW1wb3J0JztcbmltcG9ydCBmb3JtYXRTdGF0aWMgZnJvbSAnLi9zdGF0aWMnO1xuXG5jb25zdCBmb3JtYXRDb2xsZWN0aW9uID0gKGZvcm1hdHRlciwgY29sbGVjdGlvbiA9IHt9KSA9PiAoXG4gIE9iamVjdC5rZXlzKGNvbGxlY3Rpb24pLm1hcChcbiAgICAobmFtZSkgPT4gZm9ybWF0dGVyKG5hbWUsIGNvbGxlY3Rpb25bbmFtZV0pXG4gICkuam9pbignJylcbik7XG5cbmV4cG9ydCBkZWZhdWx0IChpbXBvcnRzLCBzdGF0aWNzLCBqc3hDb250ZW50LCB7IHBhc3NFbGVtZW50UHJvcHMgfSkgPT4ge1xuICBsZXQgbW9kdWxlVGV4dCA9IERvY0Nob21wYFxuICAgIC8vIE1vZHVsZSBnZW5lcmF0ZWQgZnJvbSBNYXJrZG93biBieSBNYXJrZG93biBDb21wb25lbnQgTG9hZGVyIHYke19fVkVSU0lPTl9ffVxuICAgICR7Zm9ybWF0Q29sbGVjdGlvbihmb3JtYXRJbXBvcnQsIGltcG9ydHMpfVxuICAgIE1hcmtkb3duQ29tcG9uZW50LnByb3BUeXBlcyA9IHtcbiAgICAgIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0YDtcblxuICBpZiAocGFzc0VsZW1lbnRQcm9wcykge1xuICAgIG1vZHVsZVRleHQgKz0gRG9jQ2hvbXAoMilgLFxuICAgICAgICBlbGVtZW50UHJvcHM6IFByb3BUeXBlcy5vYmplY3RcbiAgICAgIH07XG5cbiAgICAgIE1hcmtkb3duQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IHtcbiAgICAgICAgZWxlbWVudFByb3BzOiB7fWA7XG4gIH1cblxuICBtb2R1bGVUZXh0ICs9IERvY0Nob21wKDApYFxuICAgIFxuICAgIH07XG4gICAgJHtmb3JtYXRDb2xsZWN0aW9uKGZvcm1hdFN0YXRpYywgc3RhdGljcyl9XG4gICAgZnVuY3Rpb24gTWFya2Rvd25Db21wb25lbnQocHJvcHMpIHtcbiAgICAgIGNvbnN0IHsgY2xhc3NOYW1lLCBzdHlsZSR7cGFzc0VsZW1lbnRQcm9wcyA/ICcsIGVsZW1lbnRQcm9wcycgOiAnJ30gfSA9IHByb3BzO1xuXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBzdHlsZT17c3R5bGV9PlxuICAgICAgICAgICR7anN4Q29udGVudH1cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH07XG5cbiAgICBleHBvcnQgZGVmYXVsdCBNYXJrZG93bkNvbXBvbmVudDtcbiAgICBgO1xuXG4gIHJldHVybiBtb2R1bGVUZXh0O1xufTsiXX0=